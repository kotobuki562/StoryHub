### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Category {
  category_title: String
  created_at: DateTime
  id: Int
  user: User
  user_id: String
}

type Chapter {
  chapter_image: String
  chapter_title: String
  created_at: DateTime
  episode: Episode
  episode_id: String
  id: ID
  pages: [Page]
  publish: Boolean
  updated_at: DateTime
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Episode {
  chapters: [Chapter]
  created_at: DateTime
  episode_image: String
  episode_synopsis: String
  episode_title: String
  id: ID
  publish: Boolean
  season: Season
  season_id: String
  updated_at: DateTime
}

type Favorite {
  created_at: DateTime
  id: Int
  story: Story
  story_id: String
  user: User
  user_id: String
}

type Follow {
  created_at: DateTime
  follow_id: String
  id: Int
  user: User
  user_id: String
}

type Mutation {
  createDraft(authorEmail: String, content: String, title: String!): Post
  deletePost(postId: String): Post
  publish(postId: String): Post
  signupUser(email: String!, user_name: String): User
}

type Page {
  chapter: Chapter
  chapter_id: String
  created_at: DateTime
  id: ID
  page_body: String
  updated_at: DateTime
}

type Post {
  author: User
  content: String
  id: Int
  published: Boolean
  title: String
}

type Query {
  QueryMe(userId: String!): User
  QueryPageReviews(page: String = "1"): [Review]
  QueryStories: [Story]
  categories: [Category]
  drafts: [Post]
  filterFavoritesByStoryId(storyId: String!): [Favorite]
  filterFavoritesByUserId(userId: String!): [Favorite]
  filterFollowsByFollowId(followId: String!): [Follow]
  filterFollowsByUserId(userId: String!): [Follow]
  filterPosts(searchString: String): [Post]
  filterReviewsByStoryId(storyId: String!): [Review]
  filterReviewsByUserId(userId: String!): [Review]
  filterStoriesByUserId(userId: String!): [Story]
  post(postId: String!): Post
  reviews: [Review]
  users: [User]
}

type Review {
  created_at: DateTime
  id: ID
  publish: Boolean
  review_body: String
  review_title: String
  stars: Int
  story: Story
  story_id: String
  updated_at: DateTime
  user: User
  user_id: String
}

type Season {
  created_at: DateTime
  episodes: [Episode]
  id: ID
  publish: Boolean
  season_image: String
  season_synopsis: String
  season_title: String
  story: Story
  story_id: String
  updated_at: DateTime
}

type Story {
  created_at: DateTime
  favorites: [Favorite]
  id: ID
  publish: Boolean
  reviews: [Review]
  seasons: [Season]
  story_image: String
  story_synopsis: String
  story_title: String
  updated_at: DateTime
  user: User
  user_id: String
}

type User {
  categories: [Category]
  created_at: DateTime
  favorites: [Favorite]
  follows: [Follow]
  id: ID
  image: String
  reviews: [Review]
  stories: [Story]
  updated_at: DateTime
  user_deal: String
  user_name: String
}
