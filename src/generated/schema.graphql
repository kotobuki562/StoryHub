### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Chapter {
  chapter_image: String
  chapter_title: String
  created_at: DateTime
  episode: Episode
  episode_id: String
  id: ID
  pages(pageAccessToken: String, pageUserId: String): [Page]
  publish: Boolean
  updated_at: DateTime
}

type Character {
  character_category: String
  character_deal: String
  character_image: String
  character_name: String
  character_sex: String
  created_at: DateTime
  id: ID
  isSpoiler: Boolean
  publish: Boolean
  season: Season
  season_id: String
  settingMaterial: SettingMaterial
  setting_material_id: String
  updated_at: DateTime
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Episode {
  chapters(chapterAccessToken: String, chapterUserId: String): [Chapter]
  created_at: DateTime
  episode_image: String
  episode_synopsis: String
  episode_title: String
  id: ID
  publish: Boolean
  season: Season
  season_id: String
  updated_at: DateTime
}

type Favorite {
  created_at: DateTime
  id: String
  notifications: [Notification]
  story: Story
  story_id: String
  user: User
  user_id: String
}

type Follow {
  created_at: DateTime
  follow_id: String
  id: String
  notifications: [Notification]
  user: User
  user_id: String
}

type Mutation {
  createNotification(accessToken: String!, favoriteId: String, followId: String, receiverId: String!, reviewId: String): Notification
  createReview(acessToken: String!, reviewBody: String!, reviewTitle: String!, stars: Int!, storyId: String!): Review
  createSeason(acessToken: String!, publish: Boolean!, seasonImage: String, seasonSynopsis: String!, seasonTitle: String!, storyId: String!): Season
  createStory(acessToken: String!, publish: Boolean!, storyCategories: [String!]!, storyImage: String, storySynopsis: String!, storyTitle: String!, viewingRestriction: String): Story
  createUser(accessToken: String!, image: String, userDeal: String!, userName: String!): User
  deleteAllNotifications(accessToken: String!): Notification
  deleteNotification(accessToken: String!, notificationId: String!, receiverId: String!): Notification
  deleteReview(acessToken: String!, reviewId: String!, userId: String!): Review
  deleteSeason(acessToken: String!, seasonId: String!, userId: String!): Season
  deleteStory(storyId: String!): Story
  deleteUser(accessToken: String!): User
  signupUser(email: String!, password: String!, userName: String): User
  updateReview(acessToken: String!, reviewBody: String!, reviewId: String!, reviewTitle: String!, stars: Int!, userId: String!): Review
  updateSeason(acessToken: String!, publish: Boolean!, seasonId: String!, seasonImage: String, seasonSynopsis: String!, seasonTitle: String!, storyId: String!, userId: String!): Season
  updateStory(acessToken: String!, publish: Boolean!, storyCategories: [String!]!, storyId: String!, storyImage: String, storySynopsis: String!, storyTitle: String!, userId: String!, viewingRestriction: String): Story
  updateUser(accessToken: String!, image: String, userDeal: String!, userName: String!): User
}

type Notification {
  created_at: DateTime
  favorite: Favorite
  favorite_id: String
  follow: Follow
  follow_id: String
  id: ID
  receiver: User
  receiver_id: String
  review: Review
  review_id: String
  user: User
  user_id: String
}

type Object {
  created_at: DateTime
  id: ID
  isSpoiler: Boolean
  object_deal: String
  object_image: String
  object_name: String
  publish: Boolean
  season: Season
  season_id: String
  settingMaterial: SettingMaterial
  setting_material_id: String
  updated_at: DateTime
}

type Page {
  chapter: Chapter
  chapter_id: String
  created_at: DateTime
  id: ID
  page_body: String
  updated_at: DateTime
}

type Query {
  QueryChapterById(id: String!): Chapter
  QueryChapters(searchTitle: String, serchSeasonId: String): [Chapter]
  QueryChaptersCountByPublish: Int
  QueryChaptersCountByUnPublish: Int
  QueryCharacterById(id: String!): Character
  QueryCharacters(searchTitle: String, serchSettingMaterialId: String): [Character]
  QueryCharactersCountByPublish: Int
  QueryCharactersCountByUnPublish: Int
  QueryEpisodeById(id: String!): Episode
  QueryEpisodes(searchTitle: String, serchSeasonId: String): [Episode]
  QueryEpisodesCountByPublish: Int
  QueryEpisodesCountByUnPublish: Int
  QueryFavoritesByStory(storyId: String!): [Favorite]
  QueryFavoritesByUser(userId: String!): [Favorite]
  QueryFollowers(accessToken: String!): [Follow]
  QueryFollowing(accessToken: String!): [Follow]
  QueryMe(accessToken: String!): User
  QueryMyChapterById(accessToken: String!, id: String!, userId: String!): Chapter
  QueryMyChapters(accessToken: String!, searchTitle: String, serchSeasonId: String, userId: String!): [Chapter]
  QueryMyCharacterById(accessToken: String!, id: String!, userId: String!): Character
  QueryMyCharacters(accessToken: String!, searchTitle: String, serchSettingMaterialId: String, userId: String!): [Character]
  QueryMyEpisodeById(accessToken: String!, id: String!, userId: String!): Episode
  QueryMyEpisodes(accessToken: String!, searchTitle: String, serchSeasonId: String, userId: String!): [Episode]
  QueryMyFavoritesByStory(accessToken: String!, storyId: String!): [Favorite]
  QueryMyFavoritesByUser(accessToken: String!): [Favorite]
  QueryMyObjectById(accessToken: String!, objectId: String!, userId: String!): Object
  QueryMyObjects(accessToken: String!, searchTitle: String, serchSettingMaterialId: String, userId: String!): [Object]
  QueryMyReviewById(accessToken: String!, id: String!, userId: String!): Review
  QueryMyReviews(accessToken: String!, page: Int, pageSize: Int, searchTitle: String, serchUserId: String): [Review]
  QueryMySeasonById(accessToken: String!, id: String!, userId: String!): Season
  QueryMySeasons(accessToken: String!, searchCategory: String, searchTitle: String, searchUserId: String, userId: String!): [Season]
  QueryMySettingMaterialById(accessToken: String!, id: String!, userId: String!): SettingMaterial
  QueryMySettingMaterials(accessToken: String!, page: Int!, pageSize: Int!, searchCategory: String, searchTitle: String, searchUserId: String, serchStoryId: String): [SettingMaterial]
  QueryMyStories(accessToken: String!, searchCategory: String, searchTitle: String, searchUserId: String, userId: String!): [Story]
  QueryMyStoryById(accessToken: String!, id: String!, userId: String!): Story
  QueryMyTerminologies(accessToken: String!, page: Int!, pageSize: Int!, searchTitle: String, serchSettingMaterialId: String, userId: String!): [Terminology]
  QueryMyTerminologyById(accessToken: String!, terminologyId: String!, userId: String!): Terminology
  QueryNotificationsForUser(accessToken: String!): [Notification]
  QueryObjectById(objectId: String!): Object
  QueryObjects(searchTitle: String, serchSettingMaterialId: String): [Object]
  QueryObjectsCountByPublish: Int
  QueryObjectsCountByUnPublish: Int
  QueryPage(id: String!): Page
  QueryPageCountByChapterId(chapterId: String!): Int
  QueryPages(serchSeasonId: String): [Page]
  QueryReviewById(id: String!): Review
  QueryReviews(page: Int, pageSize: Int, searchTitle: String, serchUserId: String): [Review]
  QueryReviewsByStoryId(page: Int, pageSize: Int, searchTitle: String, serchUserId: String, storyId: String!): [Review]
  QueryReviewsCount: Int
  QueryReviewsCountByStoryId(storyId: String!): Int
  QuerySeasonById(id: String!): Season
  QuerySeasons(searchCategory: String, searchTitle: String, searchUserId: String): [Season]
  QuerySeasonsCountByPublish: Int
  QuerySeasonsCountByUnPublish: Int
  QuerySettingMaterialById(id: String!): SettingMaterial
  QuerySettingMaterials(page: Int!, pageSize: Int!, searchCategory: String, searchTitle: String, searchUserId: String, serchStoryId: String): [SettingMaterial]
  QuerySettingMaterialsCountByPublish: Int
  QuerySettingMaterialsCountByUnPublish: Int
  QueryStories(page: Int!, pageSize: Int!, searchCategory: String, searchTitle: String, searchUserId: String): [Story]
  QueryStoriesCountByPublish: Int
  QueryStoriesCountByUnPublish: Int
  QueryStoryById(id: String!): Story
  QueryTerminologies(page: Int!, pageSize: Int!, searchTitle: String, serchSettingMaterialId: String): [Terminology]
  QueryTerminologiesCountByPublish: Int
  QueryTerminologiesCountByUnPublish: Int
  QueryTerminologyById(terminologyId: String!): Terminology
  QueryUserById(id: String!): User
  QueryUsers(page: Int!, pageSize: Int!, searchUserName: String): [User]
}

type Review {
  created_at: DateTime
  id: ID
  notifications: [Notification]
  review_body: String
  review_title: String
  stars: Int
  story: Story
  story_id: String
  updated_at: DateTime
  user: User
  user_id: String
}

type Season {
  characters(characterAccessToken: String, characterUserId: String): [Character]
  created_at: DateTime
  episodes(episodeAccessToken: String, episodeUserId: String): [Episode]
  id: ID
  objects(objectAccessToken: String, objectUserId: String): [Object]
  publish: Boolean
  season_image: String
  season_synopsis: String
  season_title: String
  story: Story
  story_id: String
  terminologies(terminologyAccessToken: String, terminologyUserId: String): [Terminology]
  updated_at: DateTime
}

type SettingMaterial {
  character(storyAccessToken: String): [Character]
  created_at: DateTime
  id: ID
  object(reviewAccessToken: String): [Object]
  publish: Boolean
  setting_material_deal: String
  setting_material_image: String
  setting_material_title: String
  story(storyAccessToken: String): Story
  story_id: String
  terminology(terminologyAccessToken: String): [Terminology]
  updated_at: DateTime
  user: User
  user_id: String
}

type Story {
  created_at: DateTime
  favorites: [Favorite]
  id: ID
  publish: Boolean
  reviews: [Review]
  seasons(seasonAccessToken: String, seasonUserId: String): [Season]
  story_categories: [String]
  story_image: String
  story_synopsis: String
  story_title: String
  updated_at: DateTime
  user: User
  user_id: String
  viewing_restriction: String
}

type Terminology {
  created_at: DateTime
  id: ID
  isSpoiler: Boolean
  publish: Boolean
  season: Season
  season_id: String
  settingMaterial: SettingMaterial
  setting_material_id: String
  terminology_deal: String
  terminology_name: String
  updated_at: DateTime
}

type User {
  created_at: DateTime
  favorites: [Favorite]
  follows: [Follow]
  id: ID
  image: String
  notifications: [Notification]
  reviews(reviewAccessToken: String, reviewPage: Int!, reviewPageSize: Int!): [Review]
  stories(storyAccessToken: String, storyPage: Int!, storyPageSize: Int!): [Story]
  updated_at: DateTime
  user_deal: String
  user_name: String
}
